function [Obs,HHMMSS,Treatment,leaf_tag_color,plant_number,FTime,EBal,Photo,Cond1,Ci,Trmmol,VpdL,CTleaf,Area1,BLC_1,StmRat,BLCond,Tair,Tleaf,TBlk,CO2R,CO2S,H2OR,H2OS,RH_R,RH_S,Flow1,PARi,PARo,Press,CsMch,HsMch,StableF,BLCslope,BLCoffst,f_parin,f_parout,alphaK,Status,Fo,Fm,Fs,Fo_prime,Fm_prime,NPQ] = importLCfiles(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [OBS,HHMMSS,TREATMENT,LEAF_TAG_COLOR,PLANT_NUMBER,FTIME,EBAL,PHOTO,COND1,CI,TRMMOL,VPDL,CTLEAF,AREA1,BLC_1,STMRAT,BLCOND,TAIR,TLEAF,TBLK,CO2R,CO2S,H2OR,H2OS,RH_R,RH_S,FLOW1,PARI,PARO,PRESS,CSMCH,HSMCH,STABLEF,BLCSLOPE,BLCOFFST,F_PARIN,F_PAROUT,ALPHAK,STATUS,FO,FM,FS,FO_PRIME,FM_PRIME,NPQ]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [OBS,HHMMSS,TREATMENT,LEAF_TAG_COLOR,PLANT_NUMBER,FTIME,EBAL,PHOTO,COND1,CI,TRMMOL,VPDL,CTLEAF,AREA1,BLC_1,STMRAT,BLCOND,TAIR,TLEAF,TBLK,CO2R,CO2S,H2OR,H2OS,RH_R,RH_S,FLOW1,PARI,PARO,PRESS,CSMCH,HSMCH,STABLEF,BLCSLOPE,BLCOFFST,F_PARIN,F_PAROUT,ALPHAK,STATUS,FO,FM,FS,FO_PRIME,FM_PRIME,NPQ]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [Obs,HHMMSS,Treatment,leaf_tag_color,plant_number,FTime,EBal,Photo,Cond1,Ci,Trmmol,VpdL,CTleaf,Area1,BLC_1,StmRat,BLCond,Tair,Tleaf,TBlk,CO2R,CO2S,H2OR,H2OS,RH_R,RH_S,Flow1,PARi,PARo,Press,CsMch,HsMch,StableF,BLCslope,BLCoffst,f_parin,f_parout,alphaK,Status,Fo,Fm,Fs,Fo_prime,Fm_prime,NPQ]
%   =
%   importfile('Light_curve_green_(oldest_leaf)_03-30-15-cf_sunfl_plt13.csv',2,
%   14);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/12/11 12:36:47

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: text (%s)
%   column3: text (%s)
%	column4: text (%s)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%s%s%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
Obs = dataArray{:, 1};
HHMMSS = dataArray{:, 2};
Treatment = dataArray{:, 3};
leaf_tag_color = dataArray{:, 4};
plant_number = dataArray{:, 5};
FTime = dataArray{:, 6};
EBal = dataArray{:, 7};
Photo = dataArray{:, 8};
Cond1 = dataArray{:, 9};
Ci = dataArray{:, 10};
Trmmol = dataArray{:, 11};
VpdL = dataArray{:, 12};
CTleaf = dataArray{:, 13};
Area1 = dataArray{:, 14};
BLC_1 = dataArray{:, 15};
StmRat = dataArray{:, 16};
BLCond = dataArray{:, 17};
Tair = dataArray{:, 18};
Tleaf = dataArray{:, 19};
TBlk = dataArray{:, 20};
CO2R = dataArray{:, 21};
CO2S = dataArray{:, 22};
H2OR = dataArray{:, 23};
H2OS = dataArray{:, 24};
RH_R = dataArray{:, 25};
RH_S = dataArray{:, 26};
Flow1 = dataArray{:, 27};
PARi = dataArray{:, 28};
PARo = dataArray{:, 29};
Press = dataArray{:, 30};
CsMch = dataArray{:, 31};
HsMch = dataArray{:, 32};
StableF = dataArray{:, 33};
BLCslope = dataArray{:, 34};
BLCoffst = dataArray{:, 35};
f_parin = dataArray{:, 36};
f_parout = dataArray{:, 37};
alphaK = dataArray{:, 38};
Status = dataArray{:, 39};
Fo = dataArray{:, 40};
Fm = dataArray{:, 41};
Fs = dataArray{:, 42};
Fo_prime = dataArray{:, 43};
Fm_prime = dataArray{:, 44};
NPQ = dataArray{:, 45};


